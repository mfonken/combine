//
//  C12_profile.h
//  C12_rtos
//
//  Created by Matthew Fonken on 8/9/18.
//  Copyright Â© 2018 Marbl. All rights reserved.
//

#ifndef C12_profile_h
#define C12_profile_h

#define COMPONENT_FAMILIES_IDLE SYSTEM_FAMILY_0
#define COMPONENT_FAMILIES_ALL  SYSTEM_FAMILY_0, SYSTEM_FAMILY_A, SYSTEM_FAMILY_B, SYSTEM_FAMILY_C, SYSTEM_FAMILY_D
#define COMPONENT_FAMILIES_ERROR  SYSTEM_FAMILY_0, SYSTEM_FAMILY_B, SYSTEM_FAMILY_C

/* EFR32_BLE - Primary BLE radio */
#define EFR32_BLE_ID           APPLICATION_COMPONENT_BLE_RADIO_PRIMARY
#define EFR32_BLE_FAMILY       SYSTEM_FAMILY_A
#define EFR32_BLE_COMM         COMM_BLE
#define EFR32_BLE_CHANN        COMM_CHANNEL_PRIMARY
#define EFR32_BLE_ADDR         COMM_ADDR_NONE
#define EFR32_BLE_PORT         COMM_PORT_NONE
#define EFR32_BLE_PIN          INTERNAL
#define EFR32_BLE_STATE        COMPONENT_STATE_OFF
#define EFR32_BLE_COMPONENT    { EFR32_BLE_ID, EFR32_BLE_FAMILY, EFR32_BLE_COMM, EFR32_BLE_CHANN, EFR32_BLE_ADDR, EFR32_BLE_PORT, EFR32_BLE_PIN, EFR32_BLE_STATE }

/* EFR32_SUB - Primary sub-ghz radio */
#define EFR32_SUB_ID           APPLICATION_COMPONENT_SUB_RADIO_PRIMARY
#define EFR32_SUB_FAMILY       SYSTEM_FAMILY_B
#define EFR32_SUB_COMM         COMM_SUB
#define EFR32_SUB_CHANN        COMM_CHANNEL_PRIMARY
#define EFR32_SUB_ADDR         COMM_ADDR_NONE
#define EFR32_SUB_PORT         COMM_PORT_NONE
#define EFR32_SUB_PIN          INTERNAL
#define EFR32_SUB_STATE        COMPONENT_STATE_OFF
#define EFR32_SUB_COMPONENT    { EFR32_SUB_ID, EFR32_SUB_FAMILY, EFR32_SUB_COMM, EFR32_SUB_CHANN, EFR32_SUB_ADDR, EFR32_SUB_PORT, EFR32_SUB_PIN, EFR32_SUB_STATE }

/* BNO080 - Primary Motion Sensor */
#define BNO080_ID               APPLICATION_COMPONENT_MOTION_PRIMARY
#define BNO080_FAMILY           SYSTEM_FAMILY_B
#define BNO080_COMM             COMM_SPI
#define BNO080_CHANN            COMM_CHANNEL_PRIMARY
#define BNO080_ADDR             COMM_ADDR_NONE
#define BNO080_PORT             PORTC
#define BNO080_PIN              9
#define BNO080_STATE            COMPONENT_STATE_OFF
#define BNO080_COMPONENT        { BNO080_ID, BNO080_FAMILY, BNO080_COMM, BNO080_CHANN, BNO080_ADDR, BNO080_PORT, BNO080_PIN, BNO080_STATE }

/* Camera Module - Primary Rho Sensor */
#define RHOMOD_ID               APPLICATION_COMPONENT_RHO_MODULE_PRIMARY
#define RHOMOD_FAMILY           SYSTEM_FAMILY_A
#define RHOMOD_COMM             COMM_UART
#define RHOMOD_CHANN            COMM_CHANNEL_PRIMARY
#define RHOMOD_ADDR             COMM_ADDR_NONE
#define RHOMOD_PORT             PORTA
#define RHOMOD_PIN              2
#define RHOMOD_STATE            COMPONENT_STATE_OFF
#define RHOMOD_COMPONENT        { RHOMOD_ID, RHOMOD_FAMILY, RHOMOD_COMM, RHOMOD_CHANN, RHOMOD_ADDR, RHOMOD_PORT, RHOMOD_PIN, RHOMOD_STATE }

/* CPT112S - Primary Touch Sensor */
#define CPT112_ID               APPLICATION_COMPONENT_TOUCH_PRIMARY
#define CPT112_FAMILY           SYSTEM_FAMILY_0
#define CPT112_COMM             COMM_I2C
#define CPT112_CHANN            COMM_CHANNEL_PRIMARY
#define CPT112_ADDR             0xee
#define CPT112_PORT             PORTA
#define CPT112_PIN              2
#define CPT112_STATE            COMPONENT_STATE_INTERRUPT
#define CPT112_COMPONENT        { CPT112_ID, CPT112_FAMILY, CPT112_COMM, CPT112_CHANN, CPT112_ADDR, CPT112_PORT, CPT112_PIN, CPT112_STATE }

/* STC310 - Primary Battery Sensor */
#define STC310_ID               APPLICATION_COMPONENT_BATTERY_MONITOR_PRIMARY
#define STC310_FAMILY           SYSTEM_FAMILY_0
#define STC310_COMM             COMM_I2C
#define STC310_CHANN            COMM_CHANNEL_PRIMARY
#define STC310_ADDR             0x00
#define STC310_PORT             PORTA
#define STC310_PIN              2
#define STC310_STATE            COMPONENT_STATE_INTERRUPT
#define STC310_COMPONENT        { STC310_ID, STC310_FAMILY, STC310_COMM, STC310_CHANN, STC310_ADDR, STC310_PORT, STC310_PIN, STC310_STATE }

/* Tip Module - Primary Tip Sensor */
#define TIPMOD_ID               APPLICATION_COMPONENT_TIP_PRIMARY
#define TIPMOD_FAMILY           SYSTEM_FAMILY_C
#define TIPMOD_COMM             COMM_I2C
#define TIPMOD_CHANN            COMM_CHANNEL_PRIMARY
#define TIPMOD_ADDR             0x00
#define TIPMOD_PORT             PORT0
#define TIPMOD_PIN              0
#define TIPMOD_STATE            COMPONENT_STATE_INTERRUPT
#define TIPMOD_COMPONENT        { TIPMOD_ID, TIPMOD_FAMILY, TIPMOD_COMM, TIPMOD_CHANN, TIPMOD_ADDR, TIPMOD_PORT, TIPMOD_PIN, TIPMOD_STATE }

/* DRV2605L - Primary Haptic Motor Driver */
#define DRV260_ID               APPLICATION_COMPONENT_HAPTIC_PRIMARY
#define DRV260_FAMILY           SYSTEM_FAMILY_B
#define DRV260_COMM             COMM_I2C
#define DRV260_CHANN            COMM_CHANNEL_PRIMARY
#define DRV260_ADDR             0x00
#define DRV260_PORT             PORTF
#define DRV260_PIN              0
#define DRV260_STATE            COMPONENT_STATE_OFF
#define DRV260_COMPONENT        { DRV260_ID, DRV260_FAMILY, DRV260_COMM, DRV260_CHANN, DRV260_ADDR, DRV260_PORT, DRV260_PIN, DRV260_STATE }

/* XC9265 - 1.5v Voltage Regulator */
#define XC9265_ID               APPLICATION_COMPONENT_REGULATOR_1V5
#define XC9265_FAMILY           SYSTEM_FAMILY_A
#define XC9265_COMM             COMM_NONE
#define XC9265_CHANN            COMM_CHANNEL_NONE
#define XC9265_ADDR             0x00
#define XC9265_PORT             PORTF
#define XC9265_PIN              0
#define XC9265_STATE            COMPONENT_STATE_OFF
#define XC9265_COMPONENT        { XC9265_ID, XC9265_FAMILY, XC9265_COMM, XC9265_CHANN, XC9265_ADDR, XC9265_PORT, XC9265_PIN, XC9265_STATE }



#define APPLICATION_COMPONENT_MOTION_PRIMARY_INTERRUPT_ENTRY { \
.ID = APPLICATION_SCHEDULER_ID_MOTION_INTERRUPT, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_INPUT, SYSTEM_PROFILE_ENTRY_TYPE_INTERRUPT }, */ \
.data.action = INTERRUPT_ACTION_IMMEDIATE, \
.component_id = APPLICATION_COMPONENT_MOTION_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_HANDLE_MOTION_EVENT }

#define APPLICATION_COMPONENT_TOUCH_PRIMARY_INTERRUPT_ENTRY { \
.ID = APPLICATION_SCHEDULER_ID_TOUCH_INTERRUPT, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_INPUT, SYSTEM_PROFILE_ENTRY_TYPE_INTERRUPT }, */ \
.data.info = { 0 }, \
.component_id = APPLICATION_COMPONENT_TOUCH_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_HANDLE_TOUCH_EVENT }

#define APPLICATION_COMPONENT_TIP_SCHEDULED_PROBE_ENTRY { \
.ID = APPLICATION_SCHEDULER_ID_TIP_POLL, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_OUTPUT, SYSTEM_PROFILE_ENTRY_TYPE_SCHEDULED }, */ \
.data.schedule = 15, \
.component_id = APPLICATION_COMPONENT_TIP_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_POLL_TIP }

#define APPLICATION_COMPONENT_BATTERY_MONITOR_SCHEDULED_PROBE_ENTRY { \
.ID = APPLICATION_SCHEDULER_ID_BATTERY_MONITOR_POLL, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_OUTPUT, SYSTEM_PROFILE_ENTRY_TYPE_SCHEDULED }, */ \
.data.schedule = 0.01, \
.component_id = APPLICATION_COMPONENT_BATTERY_MONITOR_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_POLL_BATTERY_MONITOR }

#define APPLICATION_COMPONENT_RHO_RECEIVE_INTERRUPT_ENTRY { \
.ID = APPLICATION_SCHEDULER_ID_RHO_INTERRUPT, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_INPUT, SYSTEM_PROFILE_ENTRY_TYPE_INTERRUPT }, */ \
.data.info = { 0 }, \
.component_id = APPLICATION_COMPONENT_RHO_MODULE_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_HANDLE_RHO_EVENT }

#define APPLICATION_COMPONENT_HAPTIC_PRIMARY_TRIGGER_ENTRY { \
.ID = APPLICATION_INTERRUPTER_ID_HAPTIC_TRIGGER, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_OUTPUT, SYSTEM_PROFILE_ENTRY_TYPE_INTERRUPT }, */ \
.data.info = { 0 }, \
.component_id = APPLICATION_COMPONENT_HAPTIC_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_TRIGGER_HAPTIC }

#define COMMUNICATION_HOST_SCHEDULED_TRANSMIT_PACKET_ENTRY { \
.ID = APPLICATION_INTERRUPTER_ID_TAU_PACKET_TRANSMIT, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_OUTPUT, SYSTEM_PROFILE_ENTRY_TYPE_SCHEDULED }, */ \
.data.schedule = 0, \
.component_id = APPLICATION_COMPONENT_BLE_RADIO_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_TRANSMIT_HOST_PACKET }

#define COMMUNICATION_HOST_RECEIVE_PACKET_INTERRUPT_ENTRY { \
.ID = APPLICATION_INTERRUPTER_ID_TAU_PACKET_RECEIVE, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_INPUT, SYSTEM_PROFILE_ENTRY_TYPE_SCHEDULED }, */ \
.data.action = INTERRUPT_ACTION_IMMEDIATE, \
.component_id = APPLICATION_COMPONENT_BLE_RADIO_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_RECEIVE_HOST_PACKET }

#define COMMUNICATION_SUB_TRANSMIT_PACKET_INTERRUPT_ENTRY { \
.ID = APPLICATION_INTERRUPTER_ID_SUB_RADIO_PACKET_TRANSMIT, \
/* .header = { SYSTEM_PROFILE_ENTRY_STATE_ENABLED, SYSTEM_PROFILE_ENTRY_DIRECTION_OUTPUT, SYSTEM_PROFILE_ENTRY_TYPE_INTERRUPT }, */ \
.data.info = { 0 }, \
.component_id = APPLICATION_COMPONENT_BLE_RADIO_PRIMARY, \
.handler_id = APPLICATION_SUBACTIVITY_TRANSMIT_SUB_RADIO_PACKET }



#define APPLICATION_TASK_SHELF_ENTRY_NULL { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_NULL_TASKS, \
.num_interrupts = 0, \
.interrupts = { }, \
.num_scheduled = 0, \
.scheduled = { } }

#define APPLICATION_TASK_SHELF_ENTRY_GLOBAL_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_GLOBAL_TASKS, \
.num_interrupts = 1, \
.interrupts = { APPLICATION_COMPONENT_MOTION_PRIMARY_INTERRUPT_ENTRY }, \
.num_scheduled = 0, \
.scheduled = { } }

#define APPLICATION_TASK_SHELF_ENTRY_SENSOR_MOTION_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_MOTION_TASKS, \
.num_interrupts = 1, \
.interrupts = { APPLICATION_COMPONENT_MOTION_PRIMARY_INTERRUPT_ENTRY }, \
.num_scheduled = 0, \
.scheduled = { } }

#define APPLICATION_TASK_SHELF_ENTRY_SENSOR_TOUCH_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_TOUCH_TASKS, \
.num_interrupts = 1, \
.interrupts = { APPLICATION_COMPONENT_TOUCH_PRIMARY_INTERRUPT_ENTRY }, \
.num_scheduled = 0, \
.scheduled = { } }

#define APPLICATION_TASK_SHELF_ENTRY_SENSOR_TIP_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_TIP_TASKS, \
.num_interrupts = 0, \
.interrupts = { }, \
.num_scheduled = 1, \
.scheduled = { APPLICATION_COMPONENT_TIP_SCHEDULED_PROBE_ENTRY } }

#define APPLICATION_TASK_SHELF_ENTRY_SENSOR_BATTERY_MONITOR_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_BATTERY_MONITOR_TASKS, \
.num_interrupts = 0, \
.interrupts = { }, \
.num_scheduled = 1, \
.scheduled = { APPLICATION_COMPONENT_BATTERY_MONITOR_SCHEDULED_PROBE_ENTRY } }

#define APPLICATION_TASK_SHELF_ENTRY_SENSOR_RHO_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_RHO_TASKS, \
.num_interrupts = 0, \
.interrupts = { }, \
.num_scheduled = 1, \
.scheduled = { APPLICATION_COMPONENT_RHO_RECEIVE_INTERRUPT_ENTRY } }

#define APPLICATION_TASK_SHELF_ENTRY_DRIVER_HAPTIC_PRIMARY_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_DRIVER_HAPTIC_PRIMARY_TASKS, \
.num_interrupts = 1, \
.interrupts = { APPLICATION_COMPONENT_HAPTIC_PRIMARY_TRIGGER_ENTRY }, \
.num_scheduled = 0, \
.scheduled = { } }

#define APPLICATION_TASK_SHELF_ENTRY_COMMUNICATION_HOST_RADIO_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_COMMUNICATION_HOST_RADIO_TASKS, \
.num_interrupts = 1, \
.interrupts = { COMMUNICATION_HOST_RECEIVE_PACKET_INTERRUPT_ENTRY }, \
.num_scheduled = 1, \
.scheduled = { COMMUNICATION_HOST_SCHEDULED_TRANSMIT_PACKET_ENTRY } }

#define APPLICATION_TASK_SHELF_ENTRY_COMMUNICATION_SUB_RADIO_TASKS { \
.ID = APPLICATION_TASK_SHELF_ENTRY_ID_COMMUNICATION_SUB_RADIO_TASKS, \
.num_interrupts = 1, \
.interrupts = { COMMUNICATION_SUB_TRANSMIT_PACKET_INTERRUPT_ENTRY }, \
.num_scheduled = 0, \
.scheduled = { } }



PROFILE_TEMPLATE =
{
    { /* Task Shelf */
        10,
        {
            APPLICATION_TASK_SHELF_ENTRY_NULL,
            APPLICATION_TASK_SHELF_ENTRY_GLOBAL_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_SENSOR_MOTION_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_SENSOR_TOUCH_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_SENSOR_TIP_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_SENSOR_BATTERY_MONITOR_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_SENSOR_RHO_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_DRIVER_HAPTIC_PRIMARY_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_COMMUNICATION_HOST_RADIO_TASKS,
            APPLICATION_TASK_SHELF_ENTRY_COMMUNICATION_SUB_RADIO_TASKS
        }
    },
    { /* Components */
        6,
        {
            BNO080_COMPONENT,
            RHOMOD_COMPONENT,
            CPT112_COMPONENT,
            STC310_COMPONENT,
            TIPMOD_COMPONENT,
            XC9265_COMPONENT
        }
    },
    { /* State Profiles */
        {
            SYSTEM_STATE_STARTUP, /* State */
            { /* Activity with subactivities to run on entry */
                SYSTEM_ACTIVITY_STARTUP,
                5, {
                    APPLICATION_SUBACTIVITY_SELF_CHECK,
                    APPLICATION_SUBACTIVITY_INIT_COMMUNICATION,
                    APPLICATION_SUBACTIVITY_INIT_COMPONENTS,
                    APPLICATION_SUBACTIVITY_INIT_TAU_CLIENT,
                    APPLICATION_SUBACTIVITY_INIT_CONFIRM
                },
                SYSTEM_STATE_IDLE//SYSTEM_STATE_ACTIVE /* Next state */
            },
            { COMPONENT_FAMILIES_ALL }, /* Families */
            1, { /* Tasks to run during state */
                APPLICATION_TASK_SHELF_ENTRY_ID_GLOBAL_TASKS
            }
        },
        {
            SYSTEM_STATE_IDLE,
            {
                SYSTEM_ACTIVITY_NONE,
                0, { },
                SYSTEM_STATE_IDLE
            },
            { COMPONENT_FAMILIES_IDLE }, /* Families */
            1, { /* Tasks */
                APPLICATION_TASK_SHELF_ENTRY_ID_NULL_TASKS
            }
        },
        {
            SYSTEM_STATE_WAITING,
            {
                SYSTEM_ACTIVITY_NONE,
                0, {},
                SYSTEM_STATE_WAITING
            },
            { COMPONENT_FAMILIES_IDLE }, /* Families */
            1, { /* Tasks */
                APPLICATION_TASK_SHELF_ENTRY_ID_NULL_TASKS
            }
        },
        {
            SYSTEM_STATE_ACTIVE,
            {
                SYSTEM_ACTIVITY_NONE,
                0, {},
                SYSTEM_STATE_ACTIVE
            },
            { COMPONENT_FAMILIES_ALL }, /* Families */
            3, { /* Tasks */
                APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_MOTION_TASKS,
                APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_TOUCH_TASKS,
                APPLICATION_TASK_SHELF_ENTRY_ID_SENSOR_TIP_TASKS,
            }
        },
        {
            SYSTEM_STATE_ASLEEP,
            {
                SYSTEM_ACTIVITY_NONE,
                0, {},
                SYSTEM_STATE_ASLEEP
            },
            { COMPONENT_FAMILIES_IDLE }, /* Families */
            1, { /* Tasks */
                APPLICATION_TASK_SHELF_ENTRY_ID_NULL_TASKS
            }
        },
        {
            SYSTEM_STATE_ERROR,
            {
                SYSTEM_ACTIVITY_NONE,
                0, {},
                SYSTEM_STATE_ERROR
            },
            { COMPONENT_FAMILIES_ERROR }, /* Families */
            1, { /* Tasks */
                APPLICATION_TASK_SHELF_ENTRY_ID_NULL_TASKS
            }
        },
        {
            SYSTEM_STATE_RECOVERY,
            {
                SYSTEM_ACTIVITY_NONE,
                0, {},
                SYSTEM_STATE_RECOVERY
            },
            { COMPONENT_FAMILIES_ERROR }, /* Families */
            1, { /* Tasks */
                APPLICATION_TASK_SHELF_ENTRY_ID_NULL_TASKS
            }
        },
        {
            SYSTEM_STATE_UNKNOWN,
            {
                SYSTEM_ACTIVITY_NONE,
                0, {},
                SYSTEM_STATE_UNKNOWN
            },
            { COMPONENT_FAMILIES_IDLE }, /* Families */
            1, { /* Tasks */
                APPLICATION_TASK_SHELF_ENTRY_ID_NULL_TASKS
            }
        }
    }
};

#endif /* C12_profile_h */

